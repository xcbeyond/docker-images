name: Sync Multi-Arch Images with nerdctl

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Docker Hub镜像名称 (如 nginx)'
        required: true
      tag:
        description: '镜像标签 (默认 latest)'
        default: 'latest'

jobs:
  sync-multi-arch:
    runs-on: ubuntu-latest
    env:
      NERDCTL_NO_TTY: 1  # 全局禁用 TTY
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup nerdctl
      run: |
        # 安装 containerd 和 nerdctl
        sudo apt-get update
        sudo apt-get install -y containerd
        sudo mkdir -p /usr/local/libexec/containerd
        NERDCTL_VERSION=1.5.0
        wget https://github.com/containerd/nerdctl/releases/download/v${NERDCTL_VERSION}/nerdctl-${NERDCTL_VERSION}-linux-amd64.tar.gz
        sudo tar Cxzvvf /usr/local/bin nerdctl-${NERDCTL_VERSION}-linux-amd64.tar.gz
        sudo chmod +x /usr/local/bin/nerdctl

        # 配置 QEMU 模拟器
        # docker run --privileged --rm tonistiigi/binfmt --install all

    - name: Login to GitHub Packages
      run: |
        echo ${{ secrets.PERSONAL_TOKEN }} | nerdctl login ghcr.io \
          -u ${{ github.repository_owner }} \
          --password-stdin

    - name: Sync Multi-Arch Image
      run: |
        SOURCE_IMAGE="docker.io/${{ inputs.image }}"
        TARGET_IMAGE="ghcr.io/${{ github.repository_owner }}/$(echo ${{ inputs.image }} | tr '/' '-')"
        TAG="${{ inputs.tag }}"

        # 拉取所有架构镜像
        nerdctl pull --all-platforms $SOURCE_IMAGE:$TAG

        # 获取支持的架构列表
        ARCH_LIST=$(nerdctl image inspect $SOURCE_IMAGE:$TAG | \
          jq -r '.[].Architectures | join(",")')

        # 推送各架构镜像
        for arch in $(echo $ARCH_LIST | tr "," "\n"); do
          nerdctl push \
            --platform $arch \
            $SOURCE_IMAGE:$TAG \
            $TARGET_IMAGE:$TAG
        done

        # 创建并推送 Manifest List
        nerdctl manifest create $TARGET_IMAGE:$TAG $(echo $ARCH_LIST | sed 's/,/ /g')
        nerdctl manifest push $TARGET_IMAGE:$TAG

    - name: Verify Result
      run: |
        nerdctl manifest inspect $TARGET_IMAGE:$TAG