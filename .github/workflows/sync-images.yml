name: Sync Multi-Arch Images with nerdctl

on:
  workflow_dispatch:
    inputs:
      image:
        description: 'Docker Hub镜像名称 (如 nginx)'
        required: true
      tag:
        description: '镜像标签 (默认 latest)'
        default: 'latest'

jobs:
  sync-multi-arch:
    runs-on: ubuntu-latest
    steps:
    - name: Setup nerdctl
      run: |
        # 安装系统依赖
        sudo apt-get update
        sudo apt-get install -y \
          uidmap \
          dbus-user-session \
          fuse-overlayfs \
          slirp4netns \
          iptables \
          jq

        # 配置用户命名空间
        echo "kernel.unprivileged_userns_clone=1" | sudo tee -a /etc/sysctl.conf
        sudo sysctl -p

        # 安装 rootlesskit
        ROOTLESSKIT_VERSION=1.1.1
        wget https://github.com/rootless-containers/rootlesskit/releases/download/v${ROOTLESSKIT_VERSION}/rootlesskit-$(uname -m).tar.gz
        sudo tar Cxzvf /usr/local/bin rootlesskit-$(uname -m).tar.gz

        # 安装 containerd + nerdctl
        CONTAINERD_VERSION=1.6.8
        wget https://github.com/containerd/containerd/releases/download/v${CONTAINERD_VERSION}/containerd-${CONTAINERD_VERSION}-linux-$(uname -m).tar.gz
        sudo tar Cxzvf /usr/local/bin containerd-${CONTAINERD_VERSION}-linux-$(uname -m).tar.gz

        NERDCTL_VERSION=1.5.0
        wget https://github.com/containerd/nerdctl/releases/download/v${NERDCTL_VERSION}/nerdctl-${NERDCTL_VERSION}-linux-$(uname -m).tar.gz
        sudo tar Cxzvf /usr/local/bin nerdctl-${NERDCTL_VERSION}-linux-$(uname -m).tar.gz

        # 初始化 rootless 环境
        /usr/local/bin/containerd-rootless-setuptool.sh install
        /usr/local/bin/containerd-rootless-setuptool.sh start

        # 设置 rootless 环境变量
        echo "CONTAINERD_ADDRESS=/run/containerd/containerd.sock" >> $GITHUB_ENV
        echo "CONTAINERD_NAMESPACE=default" >> $GITHUB_ENV

        # 验证 containerd 状态
        nerdctl --address $CONTAINERD_ADDRESS info

    - name: Login to GitHub Packages
      run: |
        nerdctl login ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.GITHUB_TOKEN }}

    - name: Sync Multi-Arch Image
      run: |
        SOURCE_IMAGE="docker.io/${{ inputs.image }}"
        TARGET_IMAGE="ghcr.io/${{ github.repository_owner }}/$(echo ${{ inputs.image }} | tr '/' '-')"
        TAG="${{ inputs.tag }}"

        # 拉取所有架构镜像(显式指定 containerd socket)
        nerdctl --address $CONTAINERD_ADDRESS pull --all-platforms $SOURCE_IMAGE:$TAG

        # 获取支持的架构列表
        ARCH_LIST=$(nerdctl --address $CONTAINERD_ADDRESS image inspect $SOURCE_IMAGE:$TAG | \
          jq -r '.[].Architectures | join(",")')

        # 推送各架构镜像
        for arch in $(echo $ARCH_LIST | tr "," "\n"); do
          nerdctl --address $CONTAINERD_ADDRESS push \
            --platform $arch \
            $SOURCE_IMAGE:$TAG \
            $TARGET_IMAGE:$TAG
        done

        # 创建并推送 Manifest List
        nerdctl --address $CONTAINERD_ADDRESS manifest create $TARGET_IMAGE:$TAG $(echo $ARCH_LIST | sed 's/,/ /g')
        nerdctl --address $CONTAINERD_ADDRESS manifest push $TARGET_IMAGE:$TAG

    - name: Verify Result
      run: |
        nerdctl --address $CONTAINERD_ADDRESS manifest inspect $TARGET_IMAGE:$TAG